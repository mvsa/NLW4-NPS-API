yarn init -y
yarn add express

/src
.server.ts

instala o ts e roda ele para gerar o tsconfig.json
yarn add typescript -D
yarn tsc --init


- é necessario transpilar codigo js com funções ES5+ pois o node n entende
porem para dev não vamos transpilar ainda e usamos o ts-node-dev que faz isso (EM DEV!!)
ele tb faz o papel do nodemon
yarn add ts-node-dev -D   --- criar script{--transpile-only ignora erros  }

yarn add typeorm reflect-metadata
yarn add sqlite3

.ormconfig.json
/src/database        .index.ts

/src/database/migrations

script typeOrm para usar a cli dele
 migrations coamndos = yarn typeorm migration:create -n Nome /////run

/controllers
.routes.ts

/src/models   

yarn add uuid  **

/repositories



Testes: os do Nlw serão so de integração
-Unitarios
-Integração (-> request, ->router->controller ->repository  <- repository <-controller <-response)
-EndToEnd (Caixa preta)

yarn add jest @types/jest -D
yarn jest --init
./__tests__
yarn add ts-jest -D   - para poder trabalhar com ts  nos testes

yarn add supertest @types/supertest -D  -- Auxilio em testes de integração, para simular que um servidor
esta sendo iniciado

alter server.ts   >    .app.ts
alter dabatase index
alter package.json test -- com windows precisa adicionar SET antes do node_env
**deveria ficar =   "test": "SET NODE_ENV=test jest", mas so com jest funciona? Pela documentação
ele já faz esse set

--------------------------------------------------------------
--JS modo estrito = util apenas quando trabalhando com projetos em versões antigas do JS
evitando algumas "gambiarras". Desativado no tsconfig.json


*usando sqlite, pois é leve e usado em memoria, bom pra realização de POCS
mas não indicado para produção

extensão visual studio para sqlite


 "strictPropertyInitialization": false, a Classe não irá inicializar os atributos

 **Posso deixar a criação do uuid como responsabilidade do banco, mas isso é propenso a erros
 a depender de diferentes tipos de banco, por isso nesse projeto a responsabilidade foi para o codigo

vs code - enngrenagem > keyboardshortcuts

git log

coverage report jest



 ------------------------

ctrl D, edição de multiplos termos iguais

Aparentemente setar o ambiente direto no package json não é uma operação tão segura?
Opções como o dotenv poderiam ser melhores?
https://dev.to/numtostr/environment-variables-in-node-js-the-right-way-15ad

-posso criar scripts post que serão rodados apos algum outro ja existente
exemplo do postteste