yarn init -y
yarn add express

/src
.server.ts

instala o ts e roda ele para gerar o tsconfig.json
yarn add typescript -D
yarn tsc --init


- é necessario transpilar codigo js com funções ES5+ pois o node n entende
porem para dev não vamos transpilar ainda e usamos o ts-node-dev que faz isso (EM DEV!!)
ele tb faz o papel do nodemon
yarn add ts-node-dev -D   --- criar script{--transpile-only ignora erros  }

yarn add typeorm reflect-metadata
yarn add sqlite3

.ormconfig.json
/src/database        .index.ts

/src/database/migrations

script typeOrm para usar a cli dele
 migrations coamndos = yarn typeorm migration:create -n Nome /////run

/controllers
.routes.ts

/src/models   

yarn add uuid  **

/repositories
--------------------------------------------------------------
--JS modo estrito = util apenas quando trabalhando com projetos em versões antigas do JS
evitando algumas "gambiarras". Desativado no tsconfig.json


*usando sqlite, pois é leve e usado em memoria, bom pra realização de POCS
mas não indicado para produção

extensão visual studio para sqlite


 "strictPropertyInitialization": false, a Classe não irá inicializar os atributos

 **Posso deixar a criação do uuid como responsabilidade do banco, mas isso é propenso a erros
 a depender de diferentes tipos de banco, por isso nesse projeto a responsabilidade foi para o codigo

vs code - enngrenagem > keyboardshortcuts

 refatoração de codigo